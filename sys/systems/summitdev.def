# Definitions for the Summitdev system

#---------------------------------------------------------------------------
# BATCH Scheduler
#---------------------------------------------------------------------------
JSRUN_COMMAND = jsrun -n 1 -g 4 -a 1 
BATCH_SCHEDULER = $(JSRUN_COMMAND)

CUDA_MODULE = cuda/9.0.69
#---------------------------------------------------------------------------
# C compilers
#---------------------------------------------------------------------------
CCOMPILERS="clang, gcc, xlc"

# GCC compiler
ifeq ($(CC), gcc)
  C_COMPILER_MODULE = gcc/7.1.1-20170802
  C_VERSION = gcc -dumpversion
endif

# IBM XL compiler
ifeq ($(CC), xlc)
  C_COMPILER_MODULE = xl/20180125
  C_VERSION = xlc -qversion | grep 'Version: .*$$' | sed 's/Version: //g' 
endif

# Clang compiler
ifeq ($(CC), clang)
  C_COMPILER_MODULE = clang/20170925
  C_VERSION = clang -v 2>&1 | grep -oh 'clang version [0-9.]*'| grep -oh 'version .*' | sed 's/.*/& CORAL/'
endif

#---------------------------------------------------------------------------
# C++ compilers
#---------------------------------------------------------------------------
CXXCOMPILERS="clang++, g++, xlc++"

# GCC compiler
ifeq ($(CXX), g++)
  CXX_COMPILER_MODULE = gcc/7.1.1-20170802
  CXX_VERSION = g++ -dumpversion
endif

# IBM XL compiler
ifeq ($(CXX), xlc++)
  CXX_COMPILER_MODULE = xl/20180125
  CXX_VERSION = xlc -qversion | grep 'Version: .*$$' | sed 's/Version: //g' 
endif
:w

# Clang compiler
ifeq ($(CXX), clang++)
  CXX_COMPILER_MODULE = clang/20170925
  CXX_VERSION = clang++ -v 2>&1 | grep -oh 'clang version [0-9.]*' | grep -oh 'version .*' | sed 's/.*/& CORAL/'
endif

#---------------------------------------------------------------------------
# FORTRAN Compilers
#---------------------------------------------------------------------------
FCOMPILERS="gfortran, xlf"

# GCC compiler
ifeq ($(FC), gfortran)
  F_COMPILER_MODULE = gcc/7.1.1-20170802
  F_VERSION = gfortran -dumpversion
endif

# IBM XL compiler
# Summitdev happens to have a wrapper that without it we cannot execute 
# xlf with OMP 4.5 support. This wrapper is xlf_r
ifeq ($(FC), $(filter $(FC), xlf xlf_r))
  F_COMPILER_MODULE =  xl/20180125
  CUDA_MODULE= cuda/9.0.69
  F_VERSION = xlf -qversion | grep 'Version: .*$$' | sed 's/Version: //g' 
endif

